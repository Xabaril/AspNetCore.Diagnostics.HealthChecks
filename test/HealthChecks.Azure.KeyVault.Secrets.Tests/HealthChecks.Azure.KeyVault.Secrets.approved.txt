namespace HealthChecks.Azure.KeyVault.Secrets
{
    public sealed class AzureKeyVaultSecretsHealthCheck : Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck
    {
        public AzureKeyVaultSecretsHealthCheck(Azure.Security.KeyVault.Secrets.SecretClient secretClient, HealthChecks.Azure.KeyVault.Secrets.AzureKeyVaultSecretsHealthCheckOptions? options = null) { }
        public System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult> CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext context, System.Threading.CancellationToken cancellationToken = default) { }
    }
    public sealed class AzureKeyVaultSecretsHealthCheckOptions
    {
        public AzureKeyVaultSecretsHealthCheckOptions() { }
        public bool CreateWhenNotFound { get; set; }
        public string SecretName { get; set; }
    }
}
namespace Microsoft.Extensions.DependencyInjection
{
    public static class AzureKeyVaultHealthChecksBuilderExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddAzureKeyVaultSecrets(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, System.Func<System.IServiceProvider, Azure.Security.KeyVault.Secrets.SecretClient>? clientFactory = null, System.Func<System.IServiceProvider, HealthChecks.Azure.KeyVault.Secrets.AzureKeyVaultSecretsHealthCheckOptions>? optionsFactory = null, string? name = "azure_key_vault_secret", Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus = default, System.Collections.Generic.IEnumerable<string>? tags = null, System.TimeSpan? timeout = default) { }
    }
}