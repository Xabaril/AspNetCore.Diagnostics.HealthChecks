namespace HealthChecks.CosmosDb
{
    public sealed class AzureCosmosDbHealthCheck : Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck
    {
        public AzureCosmosDbHealthCheck(Microsoft.Azure.Cosmos.CosmosClient cosmosClient, HealthChecks.CosmosDb.AzureCosmosDbHealthCheckOptions? options) { }
        public System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult> CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext context, System.Threading.CancellationToken cancellationToken = default) { }
    }
    public sealed class AzureCosmosDbHealthCheckOptions
    {
        public AzureCosmosDbHealthCheckOptions() { }
        public System.Collections.Generic.IEnumerable<string>? ContainerIds { get; set; }
        public string? DatabaseId { get; set; }
    }
}
namespace Microsoft.Extensions.DependencyInjection
{
    public static class CosmosDbHealthCheckBuilderExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddAzureCosmosDB(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, System.Func<System.IServiceProvider, Microsoft.Azure.Cosmos.CosmosClient>? clientFactory = null, System.Func<System.IServiceProvider, HealthChecks.CosmosDb.AzureCosmosDbHealthCheckOptions>? optionsFactory = null, string? name = "azure_cosmosdb", Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus = default, System.Collections.Generic.IEnumerable<string>? tags = null, System.TimeSpan? timeout = default) { }
    }
}