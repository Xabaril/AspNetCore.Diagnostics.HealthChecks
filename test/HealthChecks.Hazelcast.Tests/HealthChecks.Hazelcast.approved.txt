namespace HealthChecks.Hazelcast
{
    public class HazelcastHealthCheck : Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck
    {
        public HazelcastHealthCheck(HealthChecks.Hazelcast.HazelcastHealthCheckOptions options) { }
        public System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult> CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext context, System.Threading.CancellationToken cancellationToken = default) { }
    }
    public class HazelcastHealthCheckOptions
    {
        public HazelcastHealthCheckOptions() { }
        public System.Collections.Generic.List<string> ClusterNames { get; set; }
        public int Port { get; set; }
        public string? Server { get; set; }
    }
}
namespace Microsoft.Extensions.DependencyInjection
{
    public static class HazelcastHealthCheckBuilderExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddHazelcast(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, System.Action<HealthChecks.Hazelcast.HazelcastHealthCheckOptions> configureOptions, string? name = null, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus = default, System.Collections.Generic.IEnumerable<string>? tags = null, System.TimeSpan? timeout = default) { }
    }
}