namespace HealthChecks.SendGrid
{
    public class SendGridHealthCheck : Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck
    {
        public SendGridHealthCheck(string apiKey, System.Net.Http.IHttpClientFactory httpClientFactory) { }
        public System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult> CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext context, System.Threading.CancellationToken cancellationToken = default) { }
    }
}
namespace Microsoft.Extensions.DependencyInjection
{
    public static class SendGridHealthCheckExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddSendGrid(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, System.Func<System.IServiceProvider, string> apiKeyFactory, string? name = null, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus = default, System.Collections.Generic.IEnumerable<string>? tags = null, System.TimeSpan? timeout = default) { }
        public static Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder AddSendGrid(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder, string apiKey, string? name = null, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus = default, System.Collections.Generic.IEnumerable<string>? tags = null, System.TimeSpan? timeout = default) { }
    }
}